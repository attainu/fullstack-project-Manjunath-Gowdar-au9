{"version":3,"sources":["constants/userConstants.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","constants/productConstants.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","localStorage","removeItem","type","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","fluid","responsive","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","HomeScreen","productList","loading","error","products","useEffect","a","axios","get","data","payload","response","message","map","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","productDetails","params","Image","alt","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","push","disabled","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","getState","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","success","userUpdateProfile","Authorization","token","put","updateUserProfile","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","reviews","existItem","find","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c8188f0.chunk.js","sourcesContent":["// login constants \r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\n// register constants \r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n// Details constants \r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\n\r\n// user profile constants \r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'","import React from 'react'\r\nimport {useDispatch, useSelector } from 'react-redux' // to access store\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {logout} from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const logoutHandler =()=> {\r\ndispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>BuyMax</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n              ):\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-user'></i>Sign in\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              }\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\n// login action\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n    // config because data is sent in headers\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    // assign data to localStorage , which includes token\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// logout action\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n// register action\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n    // config because data is sent in headers\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    // register dispatch\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n   \r\n    // direct login after user registration \r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// user details action\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState() // two level destructing\r\n\r\n    // config because data is sent in headers\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    // DETAILS dispatch\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// update user action \r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState() // two level destructing\r\n\r\n    // config because data is sent in headers\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n\r\n    // update profile dispatch\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; BuyMax</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color: color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>{text ? text : ''}</span>\r\n      {/* also {text && text} */}\r\n    </div>\r\n  )\r\n}\r\n// default value of props can be done using below method\r\nRating.defaultProps = {\r\n  color: '#f8e825'\r\n}\r\n\r\n// to check data type of prop, prop type is used\r\n// Rating.propTypes={\r\n//     value: PropTypes.number.isRequired,\r\n//     text: PropTypes.string.isRequired,\r\n//     color: PropTypes.string\r\n// }\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={`${product.image}`} fluid  responsive variant='top'></Card.Img>\r\n        \r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n      </Card.Body>\r\n      <Card.Text as='div'>\r\n        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n      </Card.Text>\r\n      <Card.Text as='h3'>&#8377;{product.price}</Card.Text>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}>\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch() //instead of redux's use state to props\r\n  const productList = useSelector((state) => state.productList) // porductList is from reducer // useSelector to get data from store\r\n  const { loading, error, products } = productList // loading,error,porducts from reducer's data\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader/>\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import {\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants.js'\r\nimport axios from 'axios'\r\n\r\n// products list action\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    //the data will be used in product list success\r\n    const { data } = await axios.get('/api/products')\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// individual product action\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    //the data will be used in product DETAILS success\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductsDetails } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst ProductScreen = ({ history,match }) => {\r\n  const [qty, setQty] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductsDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n//  cart addToCartHandler\r\nconst addToCartHandler = () =>{\r\n  // props.history.push will create redirect to the mentioned link\r\n history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n}\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>price : &#8377; {product.price}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Description :{product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>&#8377;{product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? 'In Stock' : 'out of stock'}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                 {/* cart */}\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}>\r\n                          {/* in below if countInStock is 5 then array with 5 element will be created, example - [0,1,2,3,4] */}\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                  onClick =  {addToCartHandler}\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={product.countInStock === 0}>\r\n                    Add To Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\n// with redux-thunk 'async(dispatch,getState)' can be used, i.e function inside a function\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async(dispatch,getState) =>{\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  })\r\n// updating localStorage with new update state\r\n  localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n// getState is used to get all the items from redux-state\r\n","import React,{useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport { addToCart, removeFromCart} from '../actions/cartActions'\r\n\r\nconst CartScreen = ({match, location,history}) => {\r\n    const productId = match.params.id\r\n\r\n    //will get the data after query string\r\n    // ?qty=1\r\n    // [qty,1]\r\n    // therefore qty = 1\r\n    const qty = location.search ? Number(location.search.split('=')[1]):1\r\n\r\n    const dispatch = useDispatch() //to call action\r\n\r\n    const cart = useSelector(state =>state.cart) // to assign cart of state to cart variable\r\n    // console.log('hello')\r\n    // console.log(cart)\r\n    // console.log(cartItems)\r\n    const {cartItems} = cart\r\n    \r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n\r\n\r\n    const removeFromCartHandler =(id) =>{\r\n        // console.log('remove')\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n\r\n    const checkoutHandler = ()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length ===0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> :(\r\n                    <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    \r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>{item.name}</Col>\r\n                                <Col md={2}>\r\n                                <Form.Control\r\n                          as='select'\r\n                          value={item.qty}\r\n                          onChange={(e) => dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                          {/* in below if countInStock is 5 then array with 5 element will be created, example - [0,1,2,3,4] */}\r\n                          {[...Array(item.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </ListGroup.Item>\r\n                    ))}\r\n                     </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n               <Card>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <h2>Subtotal ({cartItems.reduce((acc, item) => acc+item.qty, 0)}) item</h2>\r\n                           &#8377;{cartItems.reduce((acc,item) => acc+item.qty * item.price,0).toFixed(2)} {/* default value of acc is first element in array, if not defined */}\r\n                           {/* toFixed is for to get only 2 decimal numbers */}\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length ===0} onClick={checkoutHandler}>Proceed to Checkout</Button>\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Card>             \r\n            </Col>\r\n            \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n  return <Container>\r\n      <Row className ='justify-content-md-center'>\r\n      <Col xs={12} md={6}>\r\n          {children}\r\n      </Col>\r\n\r\n      </Row>\r\n  </Container>\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { useHistory } from \"react-router-dom\" // to access history, its new method\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux' //to access redux state\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions' //login method of actions takes 2 argument\r\n\r\nconst LoginScreen = ({ location,history }) => {\r\n  // component level state\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //   accessing userLogin state\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  //   redirect for new customer Link\r\n  // 'location.search' will contain URL query string, of users current screen\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n//   redirect after login \r\n// let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n\r\n    // form submit handler \r\n  const submitHandler = (e) => {\r\n    e.preventDefault() // so page will not refresh on form submit\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {/* if loading is true the <Loader> component will be displayed  */}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        {/* email input */}\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* password input */}\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          {/* redirect after registration  */}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            {' '}\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n// location prop is from react-router\r\n\r\n// The router will provide you with a location object in a few places:\r\n// Route component as this.props.location\r\n// Route render as ({ location }) => ()\r\n// Route children as ({ location }) => ()\r\n// withRouter as this.props.location\r\n\r\n// location contains the following\r\n\r\n// {\r\n//   key: 'ac3df4', // not with HashHistory!\r\n//   pathname: '/somewhere',\r\n//   search: '?some=search-string',\r\n//   hash: '#howdy',\r\n//   state: {\r\n//     [userDefined]: true\r\n//   }\r\n// }\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { useHistory } from \"react-router-dom\" // to access history, its new method\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux' //to access redux state\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions' //login method of actions takes 2 argument\r\n\r\nconst RegisterScreen = ({ location,history }) => {\r\n  // component level state\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //   accessing userRegister state\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  //   redirect for new customer Link\r\n  // 'location.search' will contain URL query string, of users current screen\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n//   redirect after login \r\n// let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n\r\n    // form submit handler \r\n  const submitHandler = (e) => {\r\n    e.preventDefault() // so page will not refresh on form submit\r\n\r\n    // check password with confirm password \r\n    if(password !== confirmPassword){\r\n        setMessage('Password do not watch,')\r\n    }else {\r\n\r\n        dispatch(register(name,email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {/* if loading is true the <Loader> component will be displayed  */}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n      {/* name input  */}\r\n      <Form.Group controlId='email'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* email input */}\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n        {/* password input */}\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n\r\n {/* confirm password  */}\r\n <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          {/* redirect after registration  */}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            {' '}\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux' //to access redux state\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails,updateUserProfile } from '../actions/userActions' //login method of actions takes 2 argument\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  // component level state\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //   accessing userDetails state\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user.name || success) {\r\n          dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [user, success, history, userInfo, dispatch])\r\n\r\n  // form submit handler\r\n  const submitHandler = (e) => {\r\n    e.preventDefault() // so page will not refresh on form submit\r\n\r\n    // check password with confirm password\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not watch,')\r\n    } else {\r\n        dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {/* if loading is true the <Loader> component will be displayed  */}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          {/* name input  */}\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* email input */}\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* password input */}\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          {/* confirm password  */}\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) =>\r\n                setConfirmPassword(e.target.value)\r\n              }></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={6}>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3 '>\r\n        <Container>\r\n          <Route path='/login' component={LoginScreen}  />\r\n          <Route path='/register' component={RegisterScreen}  />\r\n          <Route path='/profile' component={ProfileScreen}  />\r\n          <Route path='/product/:id' component={ProductScreen}  />\r\n          <Route path='/cart/:id?' component={CartScreen}  />\r\n          {/* id? in the cartScreen implies its optional */}\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from './reducers/productReducers.js'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer, //productList is one of the state's data\r\n  productDetails: productDetailsReducer, //productList is one of the state's data\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n})\r\n\r\n// initial state setup from localStorage\r\nconst cartItemFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n// assigning initialState\r\nconst initialState = {\r\n  cart: { cartItems: cartItemFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\n// creating store\r\nconst middleware = [thunk]\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants.js'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, product: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n      case CART_REMOVE_ITEM:\r\n        return{\r\n          ...state,\r\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n        }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// .filter will add to array only if its 'true'","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// user register reducer\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// user details reducer\r\n// initial state is user with empty object\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// profile reducer\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store.js'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}